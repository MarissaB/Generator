@page
@model Generator.Pages.Vessels.IndexModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Vessels";
}

<h1>Fill a Vessel</h1>
<p>Select a vessel to fill.</p>
@if ((await AuthorizationService.AuthorizeAsync(User, null, Operations.Create)).Succeeded)
{
    <p>Admin: <a asp-page="Create">Create New Vessel</a></p>
}
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in Model.Vessel)
    {
        <div class="col">
            <div class="card border-primary mb-3" style="max-width: 20rem;">
                <a asp-page="./Fill" asp-route-id="@item.VesselId">
                    <div class="card-header">Tap to fill</div>
                </a>
                <div class="card-body">
                    <img class="rounded float-start" style="margin-right: 20px" src="~/Icons/@(Html.DisplayFor(modelItem => item.Image)).png" alt="icon" height=50 width=50 />
                    <h4 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h4>
                    <p class="card-text">Contains @(Html.DisplayFor(modelItem => item.TreasureCapacity)) treasure(s) and
                        @(Html.DisplayFor(modelItem => item.CreatureCapacity)) creature(s).
                    </p>
                    @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                    {
                        <text> Admin: </text>
                        <a asp-page="./Details" asp-route-id="@item.VesselId">Details</a>
                        <text> | </text>
                        <a asp-page="./Edit" asp-route-id="@item.VesselId">Edit</a>
                        <text> | </text>
                        <a asp-page="./Delete" asp-route-id="@item.VesselId">Delete</a>
                    }
                </div>
            </div>
        </div>
    }
</div>